name: CICD worklfow for python app


on:
    workflow_dispatch:


permissions:
      # required for all workflows
  security-events: write

      # required to fetch internal or private CodeQL packs
  packages: read

      # only required for workflows in private repositories
  actions: read
  contents: read


jobs:
    lint:
      runs-on: [ubuntu-latest]

    
      steps:
          
        - name: Checkout
          uses: actions/checkout@v5.0.0
    

        - name: Setup Python
          uses: actions/setup-python@v6.0.0
          with:
            python-version: '3.13'
    

        - name: ruff-action 
          uses: astral-sh/ruff-action@v3.5.1

        - name: fix any linting issue
          run : ruff check --fix

        - name: Fix any format issue
          run: ruff format


    secret_scanning:
       
        name: gitleaks
        runs-on: ubuntu-latest
        needs: lint


        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Scan leaks in code repo
              uses: gitleaks/gitleaks-action@v2
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


    code_scanning:
      needs: secret_scanning
      uses: ./.github/workflows/codeql.yml


    unit_testing:

        runs-on: [ubuntu-latest]
        needs: code_scanning

        strategy:
          matrix:
             python-version: ["3.12"]

    
        steps:
          
            - name: Checkout
              uses: actions/checkout@v5.0.0
        

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v6.0.0
              with:
                python-version: ${{ matrix.python-version }} 
                cache: 'pip'
                

            - name: Install dependencies
              run : |
                python -m pip install --upgrade pip
                pip install -r requirements.txt

            - name: test python code
              run : pytest 

    
    
    


           
    build-docker-image:
      runs-on: [ubuntu-latest]
      needs: unit_testing
      

      env:
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4.2.2
          with:
            fetch-depth: 0

        - name: Docker Login
          id: docker-login
          uses: docker/login-action@v3
          with:
            username: ${{ env.DOCKER_HUB_USERNAME }}
            password: ${{ env.DOCKER_HUB_TOKEN }}

        - name: Build Docker image
          id: build-image
          if: steps.docker-login.conclusion == 'success'
          run: |
              echo "Docker login successful"
              docker build -t aapurva/python-apps:dev-0.1 .
              docker push aapurva/python-apps:dev-0.1
              echo "Docker image pushed successfully"
          
          


    

    

